{"version":3,"sources":["components/AddMarca.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddMarca","agregarMarca","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","marcas","setMarcas","marca","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAW,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAAkB,EAEJC,mBAAS,IAFL,mBAEjCC,EAFiC,KAErBC,EAFqB,KAcxC,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,EAAaE,GACbC,EAAc,OAMd,2BAAOM,KAAK,OACZC,MAAOR,EACPS,SAdkB,SAACN,GAAD,OAAOF,EAAcE,EAAEO,OAAOF,Y,uBCP/CG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAE2BC,UAAUH,GAFrC,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,yBAAKgB,UAAU,0CACX,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAKA,KCHJS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAAAA,GAAa,IAAD,EACbb,mBAAS,CAClCoB,KAAM,GACNe,SAAS,IAH6B,mBAChCC,EADgC,KACzBC,EADyB,KAsBvC,OAhBGC,qBAAU,WAEN1B,EAAQC,GAAU0B,MAAK,SAAAC,GAGfH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAKtB,CAACtB,IAIAuB,EDpBwBK,CAAa5B,GAAhCa,EAD4B,EACjCN,KAAae,EADoB,EACpBA,QAGpB,OACC,oCACC,wBAAIJ,UAAU,qCAAqClB,GAElDsB,GAAW,uBAAGJ,UAAU,qCAAb,eAEZ,yBAAKA,UAAU,SACbL,EAAOJ,KAAI,SAAAC,GAAG,OACd,kBAAC,EAAD,iBAAiBA,EAAjB,CAAsBmB,IAAKnB,EAAIC,YEZvBmB,EAAe,WAAO,IAAD,EACL3C,mBAAS,CAAC,YADL,mBAC1B4C,EAD0B,KAClBC,EADkB,KAKjC,OACC,oCACC,4CACS,kBAAC,EAAD,CAAU9C,aALA,SAAC+C,GAAD,OAAWD,EAAU,CAACC,GAAF,mBAAYF,QAMnD,6BAGA,4BACEA,EAAOtB,KAAI,SAAAwB,GAAK,OAChB,kBAAC,EAAD,CACAJ,IAAKI,EACLjC,SAAUiC,UCffC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.70b7f03f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddMarca = ({agregarMarca}) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = (e) => setInputValue(e.target.value);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2) {\n            agregarMarca(inputValue);\n            setInputValue('');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" \n            value={inputValue}\n            onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddMarca.propTypes = {\n    agregarMarca: PropTypes.func.isRequired\n}\n","export const getGifs = async (category) => {\n    const url =\n        `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=8o9t35KN8Y887cf7b63MI8iIh3hARtX9`;\n\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        };\n    });\n\n    return gifs;\n};","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    console.log(id, title, url);\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <h4>{title}</h4>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n\tconst {data:images, loading} = useFetchGifs(category);\n\n\t\n\treturn (\n\t\t<>\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n\t\t\t{loading && <p className=\"animate__animated animate__fadeIn\">Cargando...</p> } \n\t\t\t\n\t\t\t<div className=\"cards\">\n\t\t\t\t{images.map(img => (\n\t\t\t\t\t<GifGridItem {...img} key={img.id} />\n\t\t\t\t))}\n\t\t\t</div>\n\n\t\t\t\n\t\t</>\n\t);\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = category => {\n\tconst [state, setState] = useState({\n\t\tdata: [],\n\t\tloading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category).then(imgs => {\n\n            \n                setState({\n                    data: imgs,\n                    loading: false\n        \n                });\n\n        })\n    }, [category]);\n    \n\t\n\n\treturn state;\n};\n","import React, { useState } from \"react\";\nimport { AddMarca } from \"./components/AddMarca\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifExpertApp = () => {\n\tconst [marcas, setMarcas] = useState([\"Simpson\"]);\n\n\tconst agregarMarca = (marca) => setMarcas([marca, ...marcas]);\n\n\treturn (\n\t\t<>\n\t\t\t<h2>GifExpertApp</h2>\n            <AddMarca agregarMarca={agregarMarca} />\n\t\t\t<hr />\n\n\n\t\t\t<ol>\n\t\t\t\t{marcas.map(marca => (\n\t\t\t\t\t<GifGrid \n\t\t\t\t\tkey={marca}\n\t\t\t\t\tcategory={marca} />\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}